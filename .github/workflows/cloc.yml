name: Count Lines of Code

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC
  workflow_dispatch:

jobs:
  count-loc:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false  # So that our push and PR actions can use their own token

      - name: Install cloc
        run: sudo apt-get install -y cloc

      - name: Run cloc and save output
        run: |
          echo "Lines of Code Report - $(date)" > cloc_report.txt
          cloc . --exclude-dir=node_modules,dist,coverage,.devcontainer >> cloc_report.txt
          echo "" >> cloc_report.txt
          echo "Generated on: $(date)" >> cloc_report.txt

      - name: Commit changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add cloc_report.txt
          # Commit only if there are changes; if none, don't error out
          git commit -m "Update cloc report [$(date)]" || echo "No changes to commit"

      - name: Push changes to dedicated branch
        run: |
          # Set branch name; you could include date/time for uniqueness if needed
          BRANCH="cloc-report-update"
          # Create the branch if it doesn't exist and push changes
          git push origin HEAD:$BRANCH

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: cloc-report-update  # The branch containing your changes
          base: main                 # The branch you want to merge into
          title: "Automated PR: Update cloc report"
          body: "This PR updates the cloc report with the latest changes."
          commit-message: "Update cloc report [$(date)]"
